/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package podmamanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

import static podmamanagement.MyClient.AName;
import static podmamanagement.MyClient.id;

import static podmamanagement.UpdateGroupClass.GroupName;
import static podmamanagement.UpdateGroupClass.GroupSize;
import static podmamanagement.UpdateGroupClass.Grade;

/**
 *
 * @author millat
 */
public class Lout extends javax.swing.JFrame {

    /**
     * Creates new form Lout
     */
    public Lout() {
        initComponents();
        
        
        
        //initially showing member number of groups
                LNumberOfMembers.setText("16");
        
        
        InitialGroupDetail();
                
    }
    //Globally decleared.....
    AddClientInGroupFrame addCInGroup = new AddClientInGroupFrame();
    UpdateGroupDetail UpdateGroup = new UpdateGroupDetail();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tpadd = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        InitialClientRecordButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        InitialClientInfoTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfSearchName = new javax.swing.JTextField();
        BSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SearchTable = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        tfSearchId = new javax.swing.JTextField();
        SidRadioB = new javax.swing.JRadioButton();
        SNameRadioB = new javax.swing.JRadioButton();
        BViewFullDetails = new javax.swing.JButton();
        BDeleteClient = new javax.swing.JButton();
        AddClientGroupButton = new javax.swing.JButton();
        bDebt = new javax.swing.JButton();
        jpanelAdd = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfapplicantname = new javax.swing.JTextField();
        tfapplicantage = new javax.swing.JTextField();
        tfapplicantfatherHusband = new javax.swing.JTextField();
        tfapplicantmother = new javax.swing.JTextField();
        tfapplicantpresentaddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfapplicantpermenantaddress = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ckbapplicant = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        cbapplicantmaritalcondition = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        tfapplicantOccupation = new javax.swing.JTextField();
        tfapplicantPhone = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfRef1Name = new javax.swing.JTextField();
        tfRef1FatherHusbandName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        ckbRef1 = new javax.swing.JCheckBox();
        tfRef1PresentAddress = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        tfRef1PermenantAddress = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tfRef1Phone = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tfRef1Birth = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        tfRef1Occupation = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        tfRef1Income = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        tfRef2Income = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tfRef2Name = new javax.swing.JTextField();
        tfRef2FatherHusbandName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        ckbRef2 = new javax.swing.JCheckBox();
        tfRef2PresentAddress = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        tfRef2PermenantAddress = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        tfRef2Phone = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        tfRef2Birth = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        tfRef2Occupation = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        cbapplicantsex = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        tfapplicantbirth = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        bAddDone = new javax.swing.JButton();
        ClientAddMessage = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        tfApplicantId = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        GradeComboBox = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        GroupDetailTable = new javax.swing.JTable();
        bUpdateGroup = new javax.swing.JButton();
        bDeleteGroup = new javax.swing.JButton();
        LNoOfMember = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        tfGroupName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        CbGrade = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        GroupButton = new javax.swing.JButton();
        LNumberOfMembers = new javax.swing.JLabel();
        LayoutMessage = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        LoginNameINLayouttf = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Layout");

        tpadd.setAutoscrolls(true);

        InitialClientRecordButton.setText("Show Total Client");
        InitialClientRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InitialClientRecordButtonActionPerformed(evt);
            }
        });

        InitialClientInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14", "Title 15", "Title 16", "Title 17", "Title 18", "Title 19", "Title 20", "Title 21", "Title 22", "Title 23", "Title 24", "Title 25", "Title 26", "Title 27", "Title 28"
            }
        ));
        jScrollPane5.setViewportView(InitialClientInfoTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InitialClientRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(411, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(InitialClientRecordButton)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        tpadd.addTab("Client", jPanel1);

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 3, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(248, 91, 19));
        jLabel10.setText("Search Client ... ... ....");

        jLabel11.setText("Name :");

        BSearch.setText("Search");
        BSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSearchActionPerformed(evt);
            }
        });

        SearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Address"
            }
        ));
        SearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(SearchTable);

        jLabel39.setText("ID : ");

        buttonGroup1.add(SidRadioB);
        SidRadioB.setText("Search by ID ");

        buttonGroup1.add(SNameRadioB);
        SNameRadioB.setText("Search by Name ");

        BViewFullDetails.setText("View Full Details");
        BViewFullDetails.setEnabled(false);
        BViewFullDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BViewFullDetailsActionPerformed(evt);
            }
        });

        BDeleteClient.setText("Delete Client");
        BDeleteClient.setEnabled(false);
        BDeleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeleteClientActionPerformed(evt);
            }
        });

        AddClientGroupButton.setText("Add in Group");
        AddClientGroupButton.setEnabled(false);
        AddClientGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientGroupButtonActionPerformed(evt);
            }
        });

        bDebt.setText("Debt Collection");
        bDebt.setEnabled(false);
        bDebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDebtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BViewFullDetails)
                            .addComponent(BDeleteClient)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bDebt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AddClientGroupButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel39))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfSearchName, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(tfSearchId))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SidRadioB)
                            .addComponent(SNameRadioB))
                        .addGap(42, 42, 42)
                        .addComponent(BSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(BSearch))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(tfSearchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SidRadioB))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(SNameRadioB))))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(BViewFullDetails)
                        .addGap(55, 55, 55)
                        .addComponent(BDeleteClient)
                        .addGap(45, 45, 45)
                        .addComponent(AddClientGroupButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bDebt)))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        tpadd.addTab("Search Client", jPanel3);

        jpanelAdd.setAutoscrolls(true);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(791, 1400));

        jPanel2.setPreferredSize(new java.awt.Dimension(619, 1300));
        jPanel2.setRequestFocusEnabled(false);

        jLabel1.setText("Applicant Name:");

        tfapplicantmother.setText(" ");

        jLabel2.setText("Age:");

        jLabel4.setText("Mother Name:");

        jLabel5.setText("Present Address:");

        jLabel6.setText("Occupation:");

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(243, 83, 28));
        jLabel9.setText("New Client Info");

        jLabel3.setText("Permenant Address:");

        ckbapplicant.setText("Same as present address:");
        ckbapplicant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbapplicantActionPerformed(evt);
            }
        });

        jLabel8.setText("Marital Condition:");

        cbapplicantmaritalcondition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Married" }));

        jLabel12.setText("Phone No.:");

        tfapplicantOccupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfapplicantOccupationActionPerformed(evt);
            }
        });

        tfapplicantPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfapplicantPhoneActionPerformed(evt);
            }
        });

        jLabel15.setText("References 1");

        jLabel16.setText("Name:");

        jLabel17.setText("Present Address:");

        ckbRef1.setText("Same as Present Address");
        ckbRef1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRef1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Permenant Address:");

        jLabel19.setText("Phone Number:");

        jLabel20.setText("Date of Birth(dd/mm/yy):");

        jLabel21.setText("Occupation:");

        jLabel22.setText("Monthly Income:");

        jLabel23.setText("Monthly Income:");

        jLabel24.setText("References 2");

        jLabel25.setText("Name:");

        jLabel26.setText("Present Address:");

        ckbRef2.setText("Same as Present Address");
        ckbRef2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRef2ActionPerformed(evt);
            }
        });

        jLabel27.setText("Permenant Address:");

        jLabel28.setText("Phone Number:");

        jLabel29.setText("Date of Birth(dd/mm/yy):");

        jLabel30.setText("Occupation:");

        jLabel31.setText("Picture:");

        jLabel32.setText("Signature:");

        jLabel33.setText("Sex:");

        cbapplicantsex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        jLabel34.setText("Date of Birth(dd/mm/yy):");

        jLabel35.setText("Father/Husband Name:");

        jLabel36.setText("Father/Husband Name:");

        jLabel37.setText("Father/Husband Name:");

        bAddDone.setText("DONE");
        bAddDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddDoneActionPerformed(evt);
            }
        });

        jLabel38.setText("ID : ");

        jLabel42.setForeground(new java.awt.Color(231, 16, 16));
        jLabel42.setText("*");

        jLabel43.setForeground(new java.awt.Color(231, 16, 16));
        jLabel43.setText("*");

        jLabel44.setForeground(new java.awt.Color(231, 16, 16));
        jLabel44.setText("*");

        jLabel45.setForeground(new java.awt.Color(231, 16, 16));
        jLabel45.setText("*");

        jLabel46.setForeground(new java.awt.Color(231, 16, 16));
        jLabel46.setText("*");

        jLabel47.setForeground(new java.awt.Color(231, 16, 16));
        jLabel47.setText("*");

        jLabel48.setForeground(new java.awt.Color(231, 16, 16));
        jLabel48.setText("*");

        jLabel49.setForeground(new java.awt.Color(231, 16, 16));
        jLabel49.setText("*");

        jLabel50.setForeground(new java.awt.Color(231, 16, 16));
        jLabel50.setText("*");

        jLabel51.setForeground(new java.awt.Color(231, 16, 16));
        jLabel51.setText("*");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(ckbapplicant)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(ckbRef1)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbapplicantsex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfapplicantbirth, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantname, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantage, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantfatherHusband, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantmother, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantpresentaddress, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantpermenantaddress, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbapplicantmaritalcondition, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfapplicantOccupation, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfapplicantPhone)
                                        .addComponent(tfRef1Name, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1FatherHusbandName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1PresentAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1PermenantAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1Phone, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1Birth, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1Occupation, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfRef1Income, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel32)
                                        .addGap(178, 178, 178)
                                        .addComponent(jLabel31))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(jLabel38)
                                        .addGap(27, 27, 27)
                                        .addComponent(tfApplicantId, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel23)
                            .addComponent(ckbRef2)
                            .addComponent(jLabel37))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfRef2FatherHusbandName)
                            .addComponent(tfRef2PresentAddress)
                            .addComponent(tfRef2PermenantAddress)
                            .addComponent(tfRef2Phone)
                            .addComponent(tfRef2Birth)
                            .addComponent(tfRef2Occupation)
                            .addComponent(tfRef2Income)
                            .addComponent(tfRef2Name, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(bAddDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ClientAddMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(8, 8, 8)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfapplicantname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(tfApplicantId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfapplicantage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(cbapplicantsex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(tfapplicantbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfapplicantfatherHusband, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfapplicantmother, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfapplicantpresentaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbapplicant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(tfapplicantpermenantaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel44))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(cbapplicantmaritalcondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(tfapplicantOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(tfapplicantPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel45))
                                .addGap(35, 35, 35))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(146, 146, 146)))
                        .addComponent(jLabel15)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(tfRef1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfRef1FatherHusbandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(241, 241, 241)
                        .addComponent(tfRef1PresentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbRef1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(tfRef1PermenantAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(tfRef1Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(tfRef1Birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(tfRef1Occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRef1Income, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(tfRef2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfRef2FatherHusbandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26))
                    .addComponent(tfRef2PresentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbRef2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(tfRef2PermenantAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(tfRef2Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(tfRef2Birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(tfRef2Occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRef2Income, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddDone, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientAddMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel2);

        javax.swing.GroupLayout jpanelAddLayout = new javax.swing.GroupLayout(jpanelAdd);
        jpanelAdd.setLayout(jpanelAddLayout);
        jpanelAddLayout.setHorizontalGroup(
            jpanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1326, Short.MAX_VALUE))
        );
        jpanelAddLayout.setVerticalGroup(
            jpanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelAddLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tpadd.addTab("Add Client", jpanelAdd);

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        GradeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));
        GradeComboBox.setName(""); // NOI18N
        GradeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradeComboBoxActionPerformed(evt);
            }
        });

        jLabel40.setText("Grade:");

        GroupDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group Name", "Group Size", "Members Existing", "Grade"
            }
        ));
        GroupDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GroupDetailTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GroupDetailTable);

        bUpdateGroup.setText("Update Group");
        bUpdateGroup.setEnabled(false);
        bUpdateGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateGroupActionPerformed(evt);
            }
        });

        bDeleteGroup.setText("Delete Group");
        bDeleteGroup.setEnabled(false);
        bDeleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bUpdateGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDeleteGroup)))
                .addGap(159, 159, 159)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(436, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(GradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bUpdateGroup)
                    .addComponent(bDeleteGroup))
                .addContainerGap(378, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(226, 226, 226))
        );

        tpadd.addTab("Group Detail", jPanel4);

        jLabel13.setText("Group Name : ");

        jLabel14.setText("Grade");

        CbGrade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));
        CbGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbGradeActionPerformed(evt);
            }
        });

        jLabel7.setText("Number of Member : ");

        GroupButton.setText("Done");
        GroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LNoOfMemberLayout = new javax.swing.GroupLayout(LNoOfMember);
        LNoOfMember.setLayout(LNoOfMemberLayout);
        LNoOfMemberLayout.setHorizontalGroup(
            LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LNoOfMemberLayout.createSequentialGroup()
                .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, LNoOfMemberLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel7))
                        .addGap(34, 34, 34)
                        .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(LNumberOfMembers, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CbGrade, javax.swing.GroupLayout.Alignment.LEADING, 0, 201, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(LNoOfMemberLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(898, 898, 898))
        );
        LNoOfMemberLayout.setVerticalGroup(
            LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LNoOfMemberLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(CbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(LNoOfMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(LNumberOfMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                .addComponent(GroupButton)
                .addGap(63, 63, 63))
        );

        tpadd.addTab("Create Group", LNoOfMember);

        jLabel41.setText("Login as: ");

        LoginNameINLayouttf.setFont(new java.awt.Font("DejaVu Sans", 3, 14)); // NOI18N
        LoginNameINLayouttf.setForeground(new java.awt.Color(236, 81, 16));
        LoginNameINLayouttf.setText("login name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(tpadd, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel41)
                        .addGap(18, 18, 18)
                        .addComponent(LoginNameINLayouttf, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LayoutMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LayoutMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(LoginNameINLayouttf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(tpadd, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfapplicantPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfapplicantPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfapplicantPhoneActionPerformed

    private void tfapplicantOccupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfapplicantOccupationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfapplicantOccupationActionPerformed

    public void LoginNameMethod(String name){
        
        LoginNameINLayouttf.setText(name);
    }
    void PopulateData(){
      
        try {
            InitialClientInfoTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            DefaultTableModel model = (DefaultTableModel)InitialClientInfoTable.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            String  myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl,"test","test");
            String query = "SELECT id,ApplicantName,ApplicantAge,ApplicantSex,ApplicantBirth,ApplicantFatherHusband,"
                    + "ApplicantMotherName,ApplicantPresentAddress,ApplicantPermenantAddress,ApplicantMarital,"
                    + "ApplicantOccupation,ApplicantPhone,Ref1Name,Ref1Father,Ref1PresentAddress,Ref1PermenantAddress,"
                    + "Ref1Phone,Ref1Birth,Ref1Occupation,Ref1Income,Ref2Name,Ref2Father,"
                    + "Ref2PresentAddress,Ref2PermenantAddress,Ref2Phone,Ref2Birth,"
                    + "Ref2Occupation,Ref2Income FROM clientinfo";
 
            // data preparation
        
            PreparedStatement preparedStmnt = conn.prepareStatement(query);

            ResultSet result = preparedStmnt.executeQuery();

            int count = 0;
            while(result.next()){
                count++;
                model.addRow(new Object[]{
                    result.getString("id"),
                    result.getString("ApplicantName"),
                    result.getString("ApplicantAge"),
                    result.getString("ApplicantSex"),
                    result.getString("ApplicantBirth"),
                    result.getString("ApplicantFatherHusband"),
                    result.getString("ApplicantMotherName"),
                    result.getString("ApplicantPresentAddress"),
                    result.getString("ApplicantPermenantAddress"),
                    result.getString("ApplicantMarital"),
                    result.getString("ApplicantOccupation"),
                    result.getString("ApplicantPhone"),
          
                    result.getString("Ref1Name"),
                    result.getString("Ref1Father"),
                    result.getString("Ref1PresentAddress"),
                    result.getString("Ref1PermenantAddress"),
                    result.getString("Ref1Phone"),
                    result.getString("Ref1Birth"),
                    result.getString("Ref1Occupation"),
                    result.getString("Ref1Income"),
                    
                    result.getString("Ref2Name"),
                    result.getString("Ref2Father"),
                    result.getString("Ref2PresentAddress"),
                    result.getString("Ref2PermenantAddress"),
                    result.getString("Ref2Phone"),
                    result.getString("Ref2Birth"),
                    result.getString("Ref2Occupation"),
                    result.getString("Ref2Income")
                    
                    
                    
                    
                    
                });

            }
            LayoutMessage.setText("Total Record found "+count);
             conn.close();
        } catch (Exception ex) {
            System.err.println("Got Exception !");
            System.err.println("The Exception is : "+ex);
        }
          
    }
    private void bAddDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddDoneActionPerformed
        
        
        
        try {   
            ClientAddMessage.setText(null);
            String  myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl,"test","test");
           
           
           String tempAppId = tfApplicantId.getText();
           
           String Idquery = "select count(id) from clientinfo where id='"+tempAppId+"'";
           PreparedStatement chk = conn.prepareStatement(Idquery);
           ResultSet result = chk.executeQuery();
           result.next();
           int count = result.getInt(1);
           System.out.println(count);
           if(count == 1){
               ClientAddMessage.setText("Duplicate ID found !! Change the ID and Try again ...");
               JOptionPane.showMessageDialog(null, "Duplicate ID found !! Change the ID and Try again ...");
           }else{
           
                //PreparedStatement preparedStmnt = conn.prepareStatement(id)
                // Insert data
                 String query = "insert into clientinfo (id,ApplicantName,ApplicantAge,ApplicantSex,ApplicantBirth,ApplicantFatherHusband,"
                         + "ApplicantMotherName,ApplicantPresentAddress,ApplicantPermenantAddress,ApplicantMarital,"
                         + "ApplicantOccupation,ApplicantPhone,Ref1Name,Ref1Father,Ref1PresentAddress,"
                         + "Ref1PermenantAddress,Ref1Phone,Ref1Birth,Ref1Occupation,Ref1Income,Ref2Name,Ref2Father,"
                         + "Ref2PresentAddress,Ref2PermenantAddress,Ref2Phone,Ref2Birth,"
                         + "Ref2Occupation,Ref2Income)"+"values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

                 // preparedStatement 
                 PreparedStatement preparedStmnt = conn.prepareStatement(query);
                 preparedStmnt.setString(1, tfApplicantId.getText());
                 preparedStmnt.setString(2,tfapplicantname.getText());
                 preparedStmnt.setString(3,tfapplicantage.getText());
                 preparedStmnt.setString(4,cbapplicantsex.getSelectedItem().toString());
                 preparedStmnt.setString(5,tfapplicantbirth.getText());
                 preparedStmnt.setString(6,tfapplicantfatherHusband.getText());
                 preparedStmnt.setString(7,tfapplicantmother.getText());
                 preparedStmnt.setString(8,tfapplicantpresentaddress.getText());                   
                 preparedStmnt.setString(9,tfapplicantpermenantaddress.getText());                      
                 preparedStmnt.setString(10,cbapplicantmaritalcondition.getSelectedItem().toString());
                 preparedStmnt.setString(11,tfapplicantOccupation.getText());
                 preparedStmnt.setString(12,tfapplicantPhone.getText());
                 preparedStmnt.setString(13,tfRef1Name.getText());
                 preparedStmnt.setString(14,tfRef1FatherHusbandName.getText());
                 preparedStmnt.setString(15,tfRef1PresentAddress.getText());
                 preparedStmnt.setString(16,tfRef1PermenantAddress.getText());
                 preparedStmnt.setString(17,tfRef1Phone.getText());
                 preparedStmnt.setString(18,tfRef1Birth.getText());
                 preparedStmnt.setString(19,tfRef1Occupation.getText());
                 preparedStmnt.setString(20,tfRef1Income.getText());
                 preparedStmnt.setString(21,tfRef2Name.getText());
                 preparedStmnt.setString(22,tfRef2FatherHusbandName.getText());
                 preparedStmnt.setString(23,tfRef2PresentAddress.getText());
                 preparedStmnt.setString(24,tfRef2PermenantAddress.getText());
                 preparedStmnt.setString(25,tfRef2Phone.getText());
                 preparedStmnt.setString(26,tfRef2Birth.getText());
                 preparedStmnt.setString(27,tfRef2Occupation.getText());
                 preparedStmnt.setString(28,tfRef2Income.getText());
                 
                 //Here we need to check the some field ... that cann't be empty  .....................................
                 if(tfApplicantId.getText().isEmpty() || tfapplicantname.getText().isEmpty() || tfapplicantPhone.getText().isEmpty()
                         || tfapplicantpermenantaddress.getText().isEmpty() ||tfRef1Name.getText().isEmpty() || tfRef1Phone.getText().isEmpty()
                         || tfRef1PermenantAddress.getText().isEmpty()||tfRef2Name.getText().isEmpty() || tfRef2Phone.getText().isEmpty()
                         || tfRef2PermenantAddress.getText().isEmpty())
                         {
                             JOptionPane.showMessageDialog(null, "* marked field should be fill up.");
                         }else{
                            preparedStmnt.execute();
                            conn.close();
                            ClientAddMessage.setText("Successfully added");
                         }

                 
                 
                 
                 PopulateData();
         
           } // End of else
           
        } catch (Exception ex) {
            System.err.println("Got Exception !");
            System.err.println("The Exception is "+ex);
        }
       // update_initialClientInfoTable();
    }//GEN-LAST:event_bAddDoneActionPerformed

    private void ckbRef1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRef1ActionPerformed

        String Address = tfRef1PresentAddress.getText();
        tfRef1PermenantAddress.setText(Address);
    }//GEN-LAST:event_ckbRef1ActionPerformed

    private void InitialClientRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InitialClientRecordButtonActionPerformed
        // TODO add your handling code here:
        PopulateData();
        InitialClientInfoTable.setVisible(true);
    }//GEN-LAST:event_InitialClientRecordButtonActionPerformed
   
    //This for searching Client from Database
  
    private void BSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSearchActionPerformed
        
        try {
            DefaultTableModel model = (DefaultTableModel) SearchTable.getModel();
            model.getDataVector().removeAllElements();
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);

            Connection conn = DriverManager.getConnection(myUrl, "test", "test");
            if(SidRadioB.isSelected()){
                String search = tfSearchId.getText();
                    String query = "";
                    if(search.trim().equals("")){
                        query = "select id,ApplicantName,ApplicantPhone,ApplicantPresentAddress from clientinfo";
                    }else{
                        query = " select id,ApplicantName,ApplicantPhone,ApplicantPresentAddress from clientinfo where id like '%"+search.trim()+"%' ";
                    }

                    PreparedStatement preparedStmnt = conn.prepareStatement(query);
                    ResultSet result = preparedStmnt.executeQuery();

                    int count = 0;
                    while(result.next()){
                        count++;
                        model.addRow(new Object[]{
                            result.getString("id"),
                            result.getString("ApplicantName"),
                            result.getString("ApplicantPhone"),
                            result.getString("ApplicantPresentAddress"),

                        });

                    }
                    ClientAddMessage.setText("Total Record found "+count);
                }
        if(SNameRadioB.isSelected()){
            String search = tfSearchName.getText();
                    String query = "";
                    if(search.trim().equals("")){
                        query = "select id,ApplicantName,ApplicantPhone,ApplicantPresentAddress from clientinfo";
                    }else{
                        query = " select id,ApplicantName,ApplicantPhone,ApplicantPresentAddress from clientinfo where ApplicantName like '%"+search.trim()+"%' ";
                    }

                    PreparedStatement preparedStmnt = conn.prepareStatement(query);
                    ResultSet result = preparedStmnt.executeQuery();

                    int count = 0;
                    while(result.next()){
                        count++;
                        model.addRow(new Object[]{
                            result.getString("id"),
                            result.getString("ApplicantName"),
                            result.getString("ApplicantPhone"),
                            result.getString("ApplicantPresentAddress"),

                        });

                    }
                    ClientAddMessage.setText("Total Record found "+count);
        }
        } catch (Exception e) {
            System.err.println("Got Exception !");
            System.err.println("The Exception is "+e);
        }
    }//GEN-LAST:event_BSearchActionPerformed

    private void BViewFullDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BViewFullDetailsActionPerformed
       try{
        DefaultTableModel model = (DefaultTableModel) SearchTable.getModel();
        MyClient.id = model.getValueAt(SearchTable.getSelectedRow(),0).toString();
        
        
        ClientDetailFrame detailFrame = new ClientDetailFrame();
        detailFrame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        detailFrame.ClientInfo(id);
        detailFrame.setVisible(true);
       }catch(Exception e){
           System.err.println("Got Exception !");
           System.err.println("The Exception is "+e);
       }
    }//GEN-LAST:event_BViewFullDetailsActionPerformed

    private void SearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTableMouseClicked
        BViewFullDetails.setEnabled(true);
        BDeleteClient.setEnabled(true);
        AddClientGroupButton.setEnabled(true);
        bDebt.setEnabled(true);
        DefaultTableModel model = (DefaultTableModel) SearchTable.getModel();
        MyClient.id = model.getValueAt(SearchTable.getSelectedRow(),0).toString();
        MyClient.AName = model.getValueAt(SearchTable.getSelectedRow(),1).toString();
        
    }//GEN-LAST:event_SearchTableMouseClicked

    private void BDeleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeleteClientActionPerformed
        int ConfirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure u want to Delete?!!","Delete",JOptionPane.YES_NO_OPTION);
        if(ConfirmDelete == 0){
        try {
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);

            Connection conn = DriverManager.getConnection(myUrl, "test", "test");
            
            String Dquery = "delete from clientinfo where id = '"+MyClient.id+"'";
            PreparedStatement preparedStmnt = conn.prepareStatement(Dquery);
            //preparedStmnt.setString(2, tfApplicantId.getText());
            preparedStmnt.execute();
            
            // Here we need to delete client detail info from grouptablewithclientitems//
            String deleteQuery = "delete from grouptablewithclientitems where Client_Id = '"+MyClient.id+"'";
            String DetectQuery = "SELECT Group_Name from grouptablewithclientitems where Client_Id = '"+MyClient.id+"'";
            
            PreparedStatement preds = conn.prepareStatement(DetectQuery);
            PreparedStatement pred = conn.prepareStatement(deleteQuery);
            pred.execute();
            
            ResultSet rs = preds.executeQuery();
            String InsideGroup = rs.getString("Group_Name"); 
            System.out.println(InsideGroup);
            
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
       
        }
        update_table();
                  
        AddClientGroupButton.setVisible(false);
        BDeleteClient.setVisible(false);
        BViewFullDetails.setVisible(false);
        bDebt.setVisible(false);
         
        }
        
    }//GEN-LAST:event_BDeleteClientActionPerformed

    private void GroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupButtonActionPerformed

         
          
          
          
        
        
            String tempGroupName = tfGroupName.getText();
            String tempSize = LNumberOfMembers.getText();
          
           
            if(tempGroupName.trim().equals("")){
                LayoutMessage.setText("Please insert Group Name!!");
                JOptionPane.showMessageDialog(null, "Group Name Box is Empy");
            
            }else{
                if(tempSize.equals("")){
                    LayoutMessage.setText("Please insert Group Size!!");
                    JOptionPane.showMessageDialog(null, "Number of Member Box is Empy");
                    
                
                }else{
                    
        
            int Confirm = JOptionPane.showConfirmDialog(null, "Is everything ok?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(Confirm == 0){
            try{
                String myDriver = "org.gjt.mm.mysql.Driver";
                String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
                Class.forName(myDriver);
                Connection conn = DriverManager.getConnection(myUrl, "test", "test");          



                    //......................Checking if duplicate group found in different grades ........................
                    //..............................................................................
                     Group_Name_Check_In_Different_Grades();                 

                //if duplicate name not found then insert table into the database's grade
                    if(countA == 0 && countB == 0 && countC == 0 && countD == 0){
                        
                        if(CbGrade.getSelectedItem().toString().equals("A")){          


                            String aquery = "insert into gradea(Group_Name,Group_Member,Existing_member,Available_Member)"+"values(?,?,?,?)";
                            PreparedStatement preparedStmnt = conn.prepareStatement(aquery);
                            preparedStmnt.setString(1, tfGroupName.getText());
                            preparedStmnt.setString(2, LNumberOfMembers.getText());
                            preparedStmnt.setString(3,"0");
                            preparedStmnt.setString(4, LNumberOfMembers.getText());
                            LayoutMessage.setText(null);
                            preparedStmnt.execute();
                            conn.close();


                        }
                        else if(CbGrade.getSelectedItem().toString().equals("B")){              



                            String aquery = "insert into gradeb(Group_Name,Group_Member,Existing_member,Available_Member)"+"values(?,?,?,?)";
                            PreparedStatement preparedStmnt = conn.prepareStatement(aquery);
                            preparedStmnt.setString(1, tfGroupName.getText());
                            preparedStmnt.setString(2, LNumberOfMembers.getText());
                            preparedStmnt.setString(3,"0");
                            preparedStmnt.setString(4, LNumberOfMembers.getText());
                            LayoutMessage.setText(null);
                            preparedStmnt.execute();
                            conn.close();

                        }
                         else  if(CbGrade.getSelectedItem().toString().equals("C")){


                            String aquery = "insert into gradec(Group_Name,Group_Member,Existing_member,Available_Member)"+"values(?,?,?,?)";
                            PreparedStatement preparedStmnt = conn.prepareStatement(aquery);
                            preparedStmnt.setString(1, tfGroupName.getText());
                            preparedStmnt.setString(2, LNumberOfMembers.getText());
                            preparedStmnt.setString(3,"0");
                            preparedStmnt.setString(4, LNumberOfMembers.getText());
                            LayoutMessage.setText(null);
                            preparedStmnt.execute();
                            conn.close();


                         }
                          else if(CbGrade.getSelectedItem().toString().equals("D")){


                            String aquery = "insert into graded(Group_Name,Group_Member,Existing_member,Available_Member)"+"values(?,?,?,?)";
                            PreparedStatement preparedStmnt = conn.prepareStatement(aquery);
                            preparedStmnt.setString(1, tfGroupName.getText());
                            preparedStmnt.setString(2, LNumberOfMembers.getText());
                            preparedStmnt.setString(3,"0");
                            preparedStmnt.setString(4, LNumberOfMembers.getText());
                            LayoutMessage.setText(null);
                            preparedStmnt.execute();
                            conn.close();



                         
                          }                       
                    }   
                    
                    JOptionPane.showMessageDialog(null, "New Group Created");
                    Clear_Fields_InCreateGroup_Panel();
                    Update_Group_Detail_Table();
                    



            }catch(Exception e){
                System.out.println(e);        


            }  
        
       
        }
                
                }
        }
        
    }//GEN-LAST:event_GroupButtonActionPerformed

    private void AddClientGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientGroupButtonActionPerformed
        // TODO add your handling code here:
        
        // !!!!!! Here we need to find dubliate id ...... Because we don't want to input or give loan same id twice or more
        try{
        
        DefaultTableModel model = (DefaultTableModel)SearchTable.getModel();
        //AddClientInGroupFrame addCInGroup = new AddClientInGroupFrame();
        MyClient.id = model.getValueAt(SearchTable.getSelectedRow(),0).toString();
        MyClient.AName = model.getValueAt(SearchTable.getSelectedRow(), 1).toString();
        addCInGroup.InputInGroup(id,AName);
        
       
        
        addCInGroup.setVisible(true);
        addCInGroup.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
    }//GEN-LAST:event_AddClientGroupButtonActionPerformed

    private void CbGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbGradeActionPerformed

        String grade = CbGrade.getSelectedItem().toString();
        
        if(grade.equals("A")){
            LNumberOfMembers.setText("16");
        }
        if(grade.equals("B")){
            LNumberOfMembers.setText("37");
        }
        if(grade.equals("C")){
            LNumberOfMembers.setText("80");
        }
        if(grade.equals("D")){
            LNumberOfMembers.setText("80");
        }
        
        
    }//GEN-LAST:event_CbGradeActionPerformed
            
        //  what is this joy ????????
    private void bUpdateGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateGroupActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) GroupDetailTable.getModel();
        UpdateGroupClass.GroupName = model.getValueAt(GroupDetailTable.getSelectedRow(), 0).toString();
        UpdateGroupClass.GroupSize = model.getValueAt(GroupDetailTable.getSelectedRow(), 1).toString();
        UpdateGroupClass.Grade = model.getValueAt(GroupDetailTable.getSelectedRow(), 3).toString();
        UpdateGroup.ShowCurrentInfo(GroupName, GroupSize, Grade);
        
        UpdateGroup.setVisible(true);
        UpdateGroup.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        UpdateGroupClass.GroupName = null;
        
        
        
        
    }//GEN-LAST:event_bUpdateGroupActionPerformed

    private void GradeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradeComboBoxActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) GroupDetailTable.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl, "test", "test");
            
            if(GradeComboBox.getSelectedItem().toString().equals("A")){
                
                String query = "select * from gradea";
                PreparedStatement preparedStmnt = conn.prepareStatement(query);
                ResultSet result = preparedStmnt.executeQuery();
                
                //printing group names in the table
                
                while(result.next()){
                     
                     
                     model.addRow(new Object[]{
                         result.getString("Group_Name"),
                         result.getString("Group_Member"),                 
                         result.getString("Existing_member"),                           
                         "A"                   
                     });
                                    
                }
                bUpdateGroup.setEnabled(false);
                bDeleteGroup.setEnabled(false);
                            
                      
            }
            if(GradeComboBox.getSelectedItem().toString().equals("B")){
                 
                
                String query = "select * from gradeb";
                PreparedStatement preparedStmnt = conn.prepareStatement(query);
                ResultSet result = preparedStmnt.executeQuery();
                
                //printing group names in the table
                
                while(result.next()){
                     model.addRow(new Object[]{
                         result.getString("Group_Name"),
                         result.getString("Group_Member"),
                         result.getString("Existing_member"),
                         "B"                   
                     });
                
               
                }
                bUpdateGroup.setEnabled(false);
                bDeleteGroup.setEnabled(false);
                
                
                            
                      
            }
            if(GradeComboBox.getSelectedItem().toString().equals("C")){
                
                String query = "select * from gradec";
                PreparedStatement preparedStmnt = conn.prepareStatement(query);
                ResultSet result = preparedStmnt.executeQuery();
                
                //printing group names in the table
                
                while(result.next()){
                     model.addRow(new Object[]{
                         result.getString("Group_Name"),
                         result.getString("Group_Member"),
                         result.getString("Existing_member"),
                         "C"                   
                     });
                                    
                }
                bUpdateGroup.setEnabled(false);
                bDeleteGroup.setEnabled(false);
                            
                      
            }
            if(GradeComboBox.getSelectedItem().toString().equals("D")){
                
                String query = "select * from graded";
                PreparedStatement preparedStmnt = conn.prepareStatement(query);
                ResultSet result = preparedStmnt.executeQuery();
                
                //printing group names in the table
                
                while(result.next()){
                     model.addRow(new Object[]{
                         result.getString("Group_Name"),
                         result.getString("Group_Member"),
                         result.getString("Existing_member"),
                         "D"                   
                     });
                                    
                }
                bUpdateGroup.setEnabled(false);
                bDeleteGroup.setEnabled(false);
                            
                      
            }
            conn.close();
            
        } catch (Exception e) {
            System.err.println("Got Exception !");
            System.err.println("The Exception is "+e);
        }
    }//GEN-LAST:event_GradeComboBoxActionPerformed

    private void GroupDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GroupDetailTableMouseClicked
 
        try{
            DefaultTableModel model = (DefaultTableModel) GroupDetailTable.getModel();
            bUpdateGroup.setEnabled(true);
            bDeleteGroup.setEnabled(true);
            UpdateGroupClass.GroupName = model.getValueAt(GroupDetailTable.getSelectedRow(), 0).toString();
        }catch(Exception e){
            System.out.println(e);
            
        }
        
    }//GEN-LAST:event_GroupDetailTableMouseClicked

    private void bDeleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteGroupActionPerformed
       int ConfirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure u want to Delete?!!","Delete",JOptionPane.YES_NO_OPTION);
        if(ConfirmDelete == 0){
        try{
        String myDriver = "org.gjt.mm.mysql.Driver";
        String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
        Class.forName(myDriver);

        Connection conn = DriverManager.getConnection(myUrl, "test", "test");
        
        if(GradeComboBox.getSelectedItem().toString().equals("A")){
            String DeleteGroupQuery = "delete from gradea where Group_Name = '"+GroupName+"'";
            
            PreparedStatement preparedStmnt = conn.prepareStatement(DeleteGroupQuery); 
            preparedStmnt.execute();
            
             //This is for deleting from grouptablewithclientitems 
             String DeleteGroupFromgroupTableWithClientItem = "delete from grouptablewithclientitems where Group_Name ='"+GroupName+"'";
             PreparedStatement predStmnt = conn.prepareStatement(DeleteGroupFromgroupTableWithClientItem);
             predStmnt.execute();
        }
        
        else if(GradeComboBox.getSelectedItem().toString().equals("B")){
            String DeleteGroupQuery = "delete from gradeb where Group_Name = '"+GroupName+"'";
            PreparedStatement preparedStmnt = conn.prepareStatement(DeleteGroupQuery);
            preparedStmnt.execute();
            
            //This is for deleting from grouptablewithclientitems 
            String DeleteGroupFromgroupTableWithClientItem = "delete from grouptablewithclientitems where Group_Name ='"+GroupName+"'";
            PreparedStatement predStmnt = conn.prepareStatement(DeleteGroupFromgroupTableWithClientItem);
            predStmnt.execute();
        }
         
        else if(GradeComboBox.getSelectedItem().toString().equals("C")){
            String DeleteGroupQuery = "delete from gradec where Group_Name = '"+GroupName+"'";
            PreparedStatement preparedStmnt = conn.prepareStatement(DeleteGroupQuery);
            preparedStmnt.execute();
             //This is for deleting from grouptablewithclientitems 
            String DeleteGroupFromgroupTableWithClientItem = "delete from grouptablewithclientitems where Group_Name ='"+GroupName+"'";
            PreparedStatement predStmnt = conn.prepareStatement(DeleteGroupFromgroupTableWithClientItem);
            predStmnt.execute();
        }
          
        else if(GradeComboBox.getSelectedItem().toString().equals("D")){
            String DeleteGroupQuery = "delete from graded where Group_Name = '"+GroupName+"'";
            PreparedStatement preparedStmnt = conn.prepareStatement(DeleteGroupQuery);
            preparedStmnt.execute();
             //This is for deleting from grouptablewithclientitems 
            String DeleteGroupFromgroupTableWithClientItem = "delete from grouptablewithclientitems where Group_Name ='"+GroupName+"'";
            PreparedStatement predStmnt = conn.prepareStatement(DeleteGroupFromgroupTableWithClientItem);
            predStmnt.execute();
        }
        conn.close();
        JOptionPane.showMessageDialog(null, "Deleted");
        Update_Group_Detail_Table();
        bDeleteGroup.setEnabled(false);
        bUpdateGroup.setEnabled(false);
        
        
        
       }catch(Exception e){
           System.out.println(e);
       
       }        
        }
        
    }//GEN-LAST:event_bDeleteGroupActionPerformed

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        
    }//GEN-LAST:event_jPanel4MouseClicked

    private void ckbRef2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRef2ActionPerformed
       
        String Address = tfRef2PresentAddress.getText();
        tfRef2PermenantAddress.setText(Address);
    }//GEN-LAST:event_ckbRef2ActionPerformed

    private void ckbapplicantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbapplicantActionPerformed
        String Address = tfapplicantpresentaddress.getText();
        tfapplicantpermenantaddress.setText(Address);
        
        
    }//GEN-LAST:event_ckbapplicantActionPerformed

    private void bDebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDebtActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel model = (DefaultTableModel) SearchTable.getModel();
            MyClient.id= model.getValueAt(SearchTable.getSelectedRow(), 0).toString();
            
            
            //Callilng Installment Collection Frame
            DebtCollection debtObject = new  DebtCollection();
            debtObject.setVisible(true);
            debtObject.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            bDebt.setEnabled(false);
            
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_bDebtActionPerformed

    //for search table
    private void update_table(){
    
        try{
           // Connection conn = null;
           // PreparedStatement preparedStmnt = null;
           // ResultSet result = null;
            
            DefaultTableModel model = (DefaultTableModel)SearchTable.getModel();
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            
            Connection conn = DriverManager.getConnection(myUrl,"test", "test");
            String query = "select id,ApplicantName,ApplicantPhone,ApplicantPresentAddress from clientinfo";
            PreparedStatement preparedStmnt = conn.prepareStatement(query);
            ResultSet result = preparedStmnt.executeQuery();
            SearchTable.setModel(DbUtils.resultSetToTableModel(result));
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
    
    }
    
     private void update_initialClientInfoTable(){
    
        try{
           // Connection conn = null;
           // PreparedStatement preparedStmnt = null;
           // ResultSet result = null;
            
            DefaultTableModel model = (DefaultTableModel)InitialClientInfoTable.getModel();
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            
            Connection conn = DriverManager.getConnection(myUrl,"test", "test");
            String query = "select * from clientinfo";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet result = pst.executeQuery();
            InitialClientInfoTable.setModel(DbUtils.resultSetToTableModel(result));
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        
        }
    
    }
     
     //after deleting the group from table  to auto refresh the table
     public void Update_Group_Detail_Table(){
         try{
                      
            DefaultTableModel model = (DefaultTableModel) GroupDetailTable.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            
            Connection conn = DriverManager.getConnection(myUrl,"test", "test");
            String querya = "select * from gradea";
            String queryb = "select * from gradeb";
            String queryc = "select * from gradec";
            String queryd = "select * from graded";
            
            PreparedStatement psta = conn.prepareStatement(querya);
            PreparedStatement pstb = conn.prepareStatement(queryb);
            PreparedStatement pstc = conn.prepareStatement(queryc);
            PreparedStatement pstd = conn.prepareStatement(queryd);
            
            ResultSet resulta = psta.executeQuery();
            ResultSet resultb = pstb.executeQuery();
            ResultSet resultc = pstc.executeQuery();
            ResultSet resultd = pstd.executeQuery();
            
            if(GradeComboBox.getSelectedItem().toString().equals("A")){
                // GroupDetailTable.setModel(DbUtils.resultSetToTableModel(resulta));
                while(resulta.next()){
                     model.addRow(new Object[]{
                         resulta.getString("Group_Name"),
                         resulta.getString("Group_Member"),
                         resulta.getString("Existing_member"),
                         "A"                   
                     });
                }
                 
            }
            
            if(GradeComboBox.getSelectedItem().toString().equals("B")){
                 //GroupDetailTable.setModel(DbUtils.resultSetToTableModel(resultb));
                while(resultb.next()){
                     model.addRow(new Object[]{
                         resultb.getString("Group_Name"),
                         resultb.getString("Group_Member"),
                         resultb.getString("Existing_member"),
                         "B"                   
                     });
                }
            }
             
            if(GradeComboBox.getSelectedItem().toString().equals("C")){
               //  GroupDetailTable.setModel(DbUtils.resultSetToTableModel(resultc));
                while(resultc.next()){
                     model.addRow(new Object[]{
                         resultc.getString("Group_Name"),
                         resultc.getString("Group_Member"),
                         resultc.getString("Existing_member"),
                         "C"                   
                     });
                }
            }
              
            if(GradeComboBox.getSelectedItem().toString().equals("D")){
                 //GroupDetailTable.setModel(DbUtils.resultSetToTableModel(resultd));
                while(resultd.next()){
                     model.addRow(new Object[]{
                         resultd.getString("Group_Name"),
                         resultd.getString("Group_Member"),
                         resultc.getString("Elxisting_member"),
                         "D"                   
                     });
                }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        
        }    
                
        
    }
     
     
     //to show the group detail initially......
     
     private void InitialGroupDetail(){
         try {
            DefaultTableModel model = (DefaultTableModel) GroupDetailTable.getModel();
            model.getDataVector().removeAllElements();
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl, "test", "test");
            
            if(GradeComboBox.getSelectedItem().toString().equals("A")){
                
                String query = "select * from gradea";
                PreparedStatement preparedStmnt = conn.prepareStatement(query);
                ResultSet result = preparedStmnt.executeQuery();
                
                //printing group names in the table
                
                while(result.next()){
                     model.addRow(new Object[]{
                         result.getString("Group_Name"),
                         result.getString("Group_Member"),
                         result.getString("Existing_member"),
                         "A"                   
                     });
                                    
                }         
     
        
            }   
            }catch(Exception e){
                System.err.println("Got Exception !");
                System.err.println("The Exception is "+e);
         
         } 
         
     }
     
    
      private void Group_Name_Check_In_Different_Grades(){
        
        try{
                String myDriver = "org.gjt.mm.mysql.Driver";
                String myUrl = "jdbc:mysql://localhost:3306/RudoDatabase";
                Class.forName(myDriver);

                Connection conn = DriverManager.getConnection(myUrl, "test","test");

        
        
                String GroupNameCheck = tfGroupName.getText();
                String GroupNameQueryA = "select count(Group_Name) from gradea where Group_Name = '"+GroupNameCheck+"'";
                PreparedStatement CheckA = conn.prepareStatement(GroupNameQueryA);
                ResultSet resultA = CheckA.executeQuery();
                resultA.next();
                countA = resultA.getInt(1);
                System.out.println(countA);
                if(countA == 1){
                     LayoutMessage.setText("Duplicate Group Name Found In Grade A!..");
                }else{
                    //checking in grade B
                    
                    String GroupNameQueryB = "select count(Group_Name) from gradeb where Group_Name = '"+GroupNameCheck+"'";
                    PreparedStatement CheckB = conn.prepareStatement(GroupNameQueryB);
                    ResultSet resultB = CheckB.executeQuery();
                    resultB.next();
                    countB = resultB.getInt(1);
                    System.out.println(countB);
                    if(countB == 1){
                         LayoutMessage.setText("Duplicate Group Name Found In Grade B!..");
                    
                    
                    }else{
                        String GroupNameQueryC = "select count(Group_Name) from gradec where Group_Name = '"+GroupNameCheck+"'";
                        PreparedStatement CheckC = conn.prepareStatement(GroupNameQueryC);
                        ResultSet resultC = CheckC.executeQuery();
                        resultC.next();
                        countC = resultC.getInt(1);
                        System.out.println(countC);
                        if(countC == 1){
                            LayoutMessage.setText("Duplicate Group Name Found In Grade C!..");

                        }else{
                            String GroupNameQueryD = "select count(Group_Name) from graded where Group_Name = '"+GroupNameCheck+"'";
                            PreparedStatement CheckD = conn.prepareStatement(GroupNameQueryD);
                            ResultSet resultD = CheckD.executeQuery();
                            resultD.next();
                            countD = resultD.getInt(1);
                            System.out.println(countD);
                            if(countD == 1){
                                 LayoutMessage.setText("Duplicate Group Name Found In Grade D!..");
                            }else{
                               countA = 0;
                               countB = 0;
                               countC = 0;
                               countD = 0;
                            }
                        }
                    }
                        
                }
        }catch(Exception e){
            System.out.println(e);
               
        }
                           
    
    }
      
      private void Clear_Fields_InCreateGroup_Panel(){
          LayoutMessage.setText(null);
          tfGroupName.setText(null);
          LNumberOfMembers.setText(null);
      
      }
      
      //........................Update the combo box and jtable in addinframegroup instantly when new group is created......
      //                     .........................................................................................
      
  
          
   
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lout().setVisible(true);
                
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddClientGroupButton;
    private javax.swing.JButton BDeleteClient;
    private javax.swing.JButton BSearch;
    private javax.swing.JButton BViewFullDetails;
    private javax.swing.JComboBox CbGrade;
    private javax.swing.JLabel ClientAddMessage;
    private javax.swing.JComboBox GradeComboBox;
    private javax.swing.JButton GroupButton;
    private javax.swing.JTable GroupDetailTable;
    private javax.swing.JTable InitialClientInfoTable;
    private javax.swing.JButton InitialClientRecordButton;
    private javax.swing.JPanel LNoOfMember;
    private javax.swing.JLabel LNumberOfMembers;
    private javax.swing.JLabel LayoutMessage;
    private javax.swing.JLabel LoginNameINLayouttf;
    private javax.swing.JRadioButton SNameRadioB;
    private javax.swing.JTable SearchTable;
    private javax.swing.JRadioButton SidRadioB;
    private javax.swing.JButton bAddDone;
    private javax.swing.JButton bDebt;
    private javax.swing.JButton bDeleteGroup;
    private javax.swing.JButton bUpdateGroup;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbapplicantmaritalcondition;
    private javax.swing.JComboBox cbapplicantsex;
    private javax.swing.JCheckBox ckbRef1;
    private javax.swing.JCheckBox ckbRef2;
    private javax.swing.JCheckBox ckbapplicant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel jpanelAdd;
    private javax.swing.JTextField tfApplicantId;
    private javax.swing.JTextField tfGroupName;
    private javax.swing.JTextField tfRef1Birth;
    private javax.swing.JTextField tfRef1FatherHusbandName;
    private javax.swing.JTextField tfRef1Income;
    private javax.swing.JTextField tfRef1Name;
    private javax.swing.JTextField tfRef1Occupation;
    private javax.swing.JTextField tfRef1PermenantAddress;
    private javax.swing.JTextField tfRef1Phone;
    private javax.swing.JTextField tfRef1PresentAddress;
    private javax.swing.JTextField tfRef2Birth;
    private javax.swing.JTextField tfRef2FatherHusbandName;
    private javax.swing.JTextField tfRef2Income;
    private javax.swing.JTextField tfRef2Name;
    private javax.swing.JTextField tfRef2Occupation;
    private javax.swing.JTextField tfRef2PermenantAddress;
    private javax.swing.JTextField tfRef2Phone;
    private javax.swing.JTextField tfRef2PresentAddress;
    private javax.swing.JTextField tfSearchId;
    private javax.swing.JTextField tfSearchName;
    private javax.swing.JTextField tfapplicantOccupation;
    private javax.swing.JTextField tfapplicantPhone;
    private javax.swing.JTextField tfapplicantage;
    private javax.swing.JTextField tfapplicantbirth;
    private javax.swing.JTextField tfapplicantfatherHusband;
    private javax.swing.JTextField tfapplicantmother;
    private javax.swing.JTextField tfapplicantname;
    private javax.swing.JTextField tfapplicantpermenantaddress;
    private javax.swing.JTextField tfapplicantpresentaddress;
    private javax.swing.JTabbedPane tpadd;
    // End of variables declaration//GEN-END:variables

    int countA = 0;
    int countB = 0;
    int countC = 0;
    int countD = 0;
}
